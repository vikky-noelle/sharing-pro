{"version":3,"sources":["ng://ngx-malihu-scrollbar/src/malihu-scrollbar.service.ts","ng://ngx-malihu-scrollbar/src/malihu-scrollbar.directive.ts","ng://ngx-malihu-scrollbar/src/malihu-scrollbar.module.ts"],"names":["MalihuScrollbarService","zone","this","prototype","initScrollbar","element","options","jQueryElement","getElement","runOutsideAngular","mCustomScrollbar","length","tagName","style","position","overflow","height","width","scrollTo","parameter","_this","update","stop","disable","reset","destroy","$","HTMLElement","jQuery","Object","Error","Injectable","NgZone","MalihuScrollbarDirective","elementRef","mScrollbarService","ngAfterViewInit","initElements","ngOnDestroy","destroyScrollbar","scrollableElement","scrollElementId","nativeElement","console","error","scrollbarOptions","Directive","args","selector","ElementRef","Input","MalihuScrollbarModule","forRoot","ngModule","providers","forChild","NgModule","exports","declarations"],"mappings":"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","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\n\r\nexport type ScrollElement = string | JQuery | HTMLElement;\r\n\r\n@Injectable()\r\nexport class MalihuScrollbarService {\r\n\r\n  constructor(\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  initScrollbar(element: ScrollElement, options: MCustomScrollbar.CustomScrollbarOptions) {\r\n    const jQueryElement = this.getElement(element);\r\n\r\n    this.zone.runOutsideAngular(() => jQueryElement.mCustomScrollbar(options));\r\n\r\n    if (jQueryElement.length > 0 && jQueryElement[0].tagName === 'BODY') {\r\n      jQueryElement[0].style.position = 'absolute';\r\n      jQueryElement[0].style.overflow = 'auto';\r\n      jQueryElement[0].style.height = '100vh';\r\n      jQueryElement[0].style.width = '100vw';\r\n    }\r\n  }\r\n\r\n  scrollTo(element: ScrollElement, parameter: any, options: MCustomScrollbar.ScrollToParameterOptions) {\r\n    this.zone.runOutsideAngular(() => this.getElement(element).mCustomScrollbar('scrollTo', parameter, options));\r\n  }\r\n\r\n  update(element: ScrollElement) {\r\n    this.zone.runOutsideAngular(() => this.getElement(element).mCustomScrollbar('update'));\r\n  }\r\n\r\n  stop(element: ScrollElement) {\r\n    this.zone.runOutsideAngular(() => this.getElement(element).mCustomScrollbar('stop'));\r\n  }\r\n\r\n  disable(element: ScrollElement, reset?: boolean) {\r\n    this.zone.runOutsideAngular(() => this.getElement(element).mCustomScrollbar('disable', !!reset));\r\n  }\r\n\r\n  destroy(element: ScrollElement) {\r\n    this.zone.runOutsideAngular(() => this.getElement(element).mCustomScrollbar('destroy'));\r\n  }\r\n\r\n  private getElement(element: ScrollElement): JQuery {\r\n    if (typeof element === 'string') {\r\n      return $(element);\r\n    }\r\n    if (typeof element === 'object' && element instanceof HTMLElement) {\r\n      return $(element);\r\n    }\r\n    if (element instanceof jQuery || 'jquery' in Object(element)) {\r\n      return element;\r\n    }\r\n    throw Error(`Unsupported element type in MalihuScrollbarService: ${element}`);\r\n  }\r\n}\r\n","import { AfterViewInit, Directive, ElementRef, Input, OnDestroy } from '@angular/core';\r\nimport { MalihuScrollbarService } from './malihu-scrollbar.service';\r\n\r\n/**\r\n * Malihu Custom Scrollbar directive\r\n * Use this reference link for options definition\r\n * http://manos.malihu.gr/jquery-custom-content-scroller/\r\n */\r\n@Directive({\r\n  selector: '[MalihuScrollbar], [malihu-scrollbar]',\r\n})\r\nexport class MalihuScrollbarDirective implements AfterViewInit, OnDestroy {\r\n  @Input() scrollElementId: string;\r\n  @Input() scrollbarOptions: MCustomScrollbar.CustomScrollbarOptions;\r\n\r\n  scrollableElement: JQuery;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private mScrollbarService: MalihuScrollbarService,\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.initElements();\r\n    this.initScrollbar();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyScrollbar();\r\n  }\r\n\r\n  initElements() {\r\n    this.scrollableElement = !!this.scrollElementId\r\n      ? $(`#${this.scrollElementId}`)\r\n      : $(this.elementRef.nativeElement);\r\n\r\n    if (!!this.scrollElementId && this.scrollableElement.length === 0) {\r\n      console.error(`MalihuScrollbarDirective cannot find element with provided scrollElementId: ${this.scrollElementId}.`);\r\n    }\r\n  }\r\n\r\n  initScrollbar() {\r\n    this.mScrollbarService.initScrollbar(this.scrollableElement, this.scrollbarOptions);\r\n  }\r\n\r\n  destroyScrollbar() {\r\n    try {\r\n      this.mScrollbarService.destroy(this.scrollableElement);\r\n    } catch (error) {\r\n      // workaround for malihu-custom-scrollbar-plugin issue:\r\n      // Cannot read property 'autoUpdate' of undefined\r\n      // https://github.com/malihu/malihu-custom-scrollbar-plugin/issues/392\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { MalihuScrollbarDirective } from './malihu-scrollbar.directive';\r\nimport { MalihuScrollbarService } from './malihu-scrollbar.service';\r\n\r\n@NgModule({\r\n  exports: [MalihuScrollbarDirective],\r\n  declarations: [MalihuScrollbarDirective],\r\n})\r\nexport class MalihuScrollbarModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MalihuScrollbarModule,\r\n      providers: [MalihuScrollbarService],\r\n    };\r\n  }\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MalihuScrollbarModule,\r\n    };\r\n  }\r\n}\r\n"]}