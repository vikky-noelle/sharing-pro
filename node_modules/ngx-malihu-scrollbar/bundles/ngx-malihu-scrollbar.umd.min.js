!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("ngx-malihu-scrollbar",["exports","@angular/core"],e):e((t=t||self)["ngx-malihu-scrollbar"]={},t.ng.core)}(this,function(t,e){"use strict";var r=function(){function t(t){this.zone=t}return t.prototype.initScrollbar=function(t,e){var r=this.getElement(t);this.zone.runOutsideAngular(function(){return r.mCustomScrollbar(e)}),r.length>0&&"BODY"===r[0].tagName&&(r[0].style.position="absolute",r[0].style.overflow="auto",r[0].style.height="100vh",r[0].style.width="100vw")},t.prototype.scrollTo=function(t,e,r){var o=this;this.zone.runOutsideAngular(function(){return o.getElement(t).mCustomScrollbar("scrollTo",e,r)})},t.prototype.update=function(t){var e=this;this.zone.runOutsideAngular(function(){return e.getElement(t).mCustomScrollbar("update")})},t.prototype.stop=function(t){var e=this;this.zone.runOutsideAngular(function(){return e.getElement(t).mCustomScrollbar("stop")})},t.prototype.disable=function(t,e){var r=this;this.zone.runOutsideAngular(function(){return r.getElement(t).mCustomScrollbar("disable",!!e)})},t.prototype.destroy=function(t){var e=this;this.zone.runOutsideAngular(function(){return e.getElement(t).mCustomScrollbar("destroy")})},t.prototype.getElement=function(t){if("string"==typeof t)return $(t);if("object"==typeof t&&t instanceof HTMLElement)return $(t);if(t instanceof jQuery||"jquery"in Object(t))return t;throw Error("Unsupported element type in MalihuScrollbarService: "+t)},t.decorators=[{type:e.Injectable}],t.ctorParameters=function(){return[{type:e.NgZone}]},t}(),o=function(){function t(t,e){this.elementRef=t,this.mScrollbarService=e}return t.prototype.ngAfterViewInit=function(){this.initElements(),this.initScrollbar()},t.prototype.ngOnDestroy=function(){this.destroyScrollbar()},t.prototype.initElements=function(){this.scrollableElement=this.scrollElementId?$("#"+this.scrollElementId):$(this.elementRef.nativeElement),this.scrollElementId&&0===this.scrollableElement.length&&console.error("MalihuScrollbarDirective cannot find element with provided scrollElementId: "+this.scrollElementId+".")},t.prototype.initScrollbar=function(){this.mScrollbarService.initScrollbar(this.scrollableElement,this.scrollbarOptions)},t.prototype.destroyScrollbar=function(){try{this.mScrollbarService.destroy(this.scrollableElement)}catch(t){}},t.decorators=[{type:e.Directive,args:[{selector:"[MalihuScrollbar], [malihu-scrollbar]"}]}],t.ctorParameters=function(){return[{type:e.ElementRef},{type:r}]},t.propDecorators={scrollElementId:[{type:e.Input}],scrollbarOptions:[{type:e.Input}]},t}(),n=function(){function t(){}return t.forRoot=function(){return{ngModule:t,providers:[r]}},t.forChild=function(){return{ngModule:t}},t.decorators=[{type:e.NgModule,args:[{exports:[o],declarations:[o]}]}],t}();t.MalihuScrollbarDirective=o,t.MalihuScrollbarModule=n,t.MalihuScrollbarService=r,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-malihu-scrollbar.umd.min.js.map