{"remainingRequest":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/rxjs/_esm5/internal/testing/HotObservable.js","dependencies":[{"path":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/rxjs/_esm5/internal/testing/HotObservable.js","mtime":1557585693530},{"path":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1557585686865},{"path":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1557585679739}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_SubscriptionLoggable,_util_applyMixins PURE_IMPORTS_END */\n/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_SubscriptionLoggable,_util_applyMixins PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { SubscriptionLoggable } from './SubscriptionLoggable';\nimport { applyMixins } from '../util/applyMixins';\nvar HotObservable = /*@__PURE__*/ /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(HotObservable, _super);\n    function HotObservable(messages, scheduler) {\n        var _this = _super.call(this) || this;\n        _this.messages = messages;\n        _this.subscriptions = [];\n        _this.scheduler = scheduler;\n        return _this;\n    }\n    HotObservable.prototype._subscribe = function (subscriber) {\n        var subject = this;\n        var index = subject.logSubscribedFrame();\n        var subscription = new Subscription();\n        subscription.add(new Subscription(function () {\n            subject.logUnsubscribedFrame(index);\n        }));\n        subscription.add(_super.prototype._subscribe.call(this, subscriber));\n        return subscription;\n    };\n    HotObservable.prototype.setup = function () {\n        var subject = this;\n        var messagesLength = subject.messages.length;\n        for (var i = 0; i < messagesLength; i++) {\n            (function () {\n                var message = subject.messages[i];\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\n            })();\n        }\n    };\n    return HotObservable;\n}(Subject));\nexport { HotObservable };\n/*@__PURE__*/ /*@__PURE__*/ applyMixins(HotObservable, [SubscriptionLoggable]);\n//# sourceMappingURL=HotObservable.js.map\n",null]}