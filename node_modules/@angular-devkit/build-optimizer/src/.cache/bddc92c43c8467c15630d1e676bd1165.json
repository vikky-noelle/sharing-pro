{"remainingRequest":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/rxjs-compat/_esm5/operator/windowTime.js","dependencies":[{"path":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/rxjs-compat/_esm5/operator/windowTime.js","mtime":1552723821532},{"path":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1552723818693},{"path":"/Users/sportssocial/Desktop/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1552723813571}],"contextDependencies":[],"result":["import { asyncScheduler } from 'rxjs';\nimport { isNumeric, isScheduler } from 'rxjs/internal-compatibility';\nimport { windowTime as higherOrder } from 'rxjs/operators';\nexport function windowTime(windowTimeSpan) {\n    var scheduler = asyncScheduler;\n    var windowCreationInterval = null;\n    var maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return higherOrder(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler)(this);\n}\n//# sourceMappingURL=windowTime.js.map",null]}