{"remainingRequest":"/Users/sportssocialweb/Desktop/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/sportssocialweb/Desktop/SportSocialWebsite/node_modules/ngx-google-places-autocomplete/ngx-google-places-autocomplete.directive.js","dependencies":[{"path":"/Users/sportssocialweb/Desktop/SportSocialWebsite/node_modules/ngx-google-places-autocomplete/ngx-google-places-autocomplete.directive.js","mtime":1562047745150},{"path":"/Users/sportssocialweb/Desktop/SportSocialWebsite/node_modules/cache-loader/dist/cjs.js","mtime":1562047738932},{"path":"/Users/sportssocialweb/Desktop/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1562047730185}],"contextDependencies":[],"result":["import { Directive, ElementRef, EventEmitter, Input, NgZone, Output } from '@angular/core';\nimport { Options } from './objects/options/options';\nvar GooglePlaceDirective = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} el\n     * @param {?} ngZone\n     */\n    function GooglePlaceDirective(el, ngZone) {\n        this.el = el;\n        this.ngZone = ngZone;\n        this.onAddressChange = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.ngAfterViewInit = function () {\n        if (!this.options)\n            this.options = new Options();\n        this.initialize();\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.isGoogleLibExists = function () {\n        return !(!google || !google.maps || !google.maps.places);\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.initialize = function () {\n        var _this = this;\n        if (!this.isGoogleLibExists())\n            throw new Error(\"Google maps library can not be found\");\n        this.autocomplete = new google.maps.places.Autocomplete(this.el.nativeElement, this.options);\n        if (!this.autocomplete)\n            throw new Error(\"Autocomplete is not initialized\");\n        if (!this.autocomplete.addListener != null) {\n            this.eventListener = this.autocomplete.addListener('place_changed', function () {\n                _this.handleChangeEvent();\n            });\n        }\n        this.el.nativeElement.addEventListener('keydown', function (event) {\n            var /** @type {?} */ key = event.key.toLowerCase();\n            if (key == 'enter' && event.target === _this.el.nativeElement) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        });\n        // according to https://gist.github.com/schoenobates/ef578a02ac8ab6726487\n        if (window && window.navigator && window.navigator.userAgent && navigator.userAgent.match(/(iPad|iPhone|iPod)/g)) {\n            setTimeout(function () {\n                var /** @type {?} */ containers = document.getElementsByClassName('pac-container');\n                if (containers) {\n                    var /** @type {?} */ arr = Array.from(containers);\n                    if (arr) {\n                        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                            var container = arr_1[_i];\n                            if (!container)\n                                continue;\n                            container.addEventListener('touchend', function (e) {\n                                e.stopImmediatePropagation();\n                            });\n                        }\n                    }\n                }\n            }, 500);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.reset = function () {\n        this.autocomplete.setComponentRestrictions(this.options.componentRestrictions);\n        this.autocomplete.setTypes(this.options.types);\n    };\n    /**\n     * @return {?}\n     */\n    GooglePlaceDirective.prototype.handleChangeEvent = function () {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.place = _this.autocomplete.getPlace();\n            if (_this.place && _this.place.place_id) {\n                _this.onAddressChange.emit(_this.place);\n            }\n        });\n    };\n    return GooglePlaceDirective;\n}());\nexport { GooglePlaceDirective };\nfunction GooglePlaceDirective_tsickle_Closure_declarations() {\n    /** @type {?} */\n    GooglePlaceDirective.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    GooglePlaceDirective.ctorParameters;\n    /** @type {?} */\n    GooglePlaceDirective.propDecorators;\n    /** @type {?} */\n    GooglePlaceDirective.prototype.options;\n    /** @type {?} */\n    GooglePlaceDirective.prototype.onAddressChange;\n    /** @type {?} */\n    GooglePlaceDirective.prototype.autocomplete;\n    /** @type {?} */\n    GooglePlaceDirective.prototype.eventListener;\n    /** @type {?} */\n    GooglePlaceDirective.prototype.place;\n    /** @type {?} */\n    GooglePlaceDirective.prototype.el;\n    /** @type {?} */\n    GooglePlaceDirective.prototype.ngZone;\n}\n//# sourceMappingURL=ngx-google-places-autocomplete.directive.js.map\n",null]}