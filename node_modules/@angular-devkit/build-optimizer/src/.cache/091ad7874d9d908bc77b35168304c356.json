{"remainingRequest":"/Users/sportssocialweb/Desktop/website2/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/sportssocialweb/Desktop/website2/SportSocialWebsite/node_modules/time-ago-pipe/esm5/time-ago-pipe.js","dependencies":[{"path":"/Users/sportssocialweb/Desktop/website2/SportSocialWebsite/node_modules/time-ago-pipe/esm5/time-ago-pipe.js","mtime":1566562240303},{"path":"/Users/sportssocialweb/Desktop/website2/SportSocialWebsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sportssocialweb/Desktop/website2/SportSocialWebsite/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1535052364000}],"contextDependencies":[],"result":["import { Pipe, NgZone, ChangeDetectorRef } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar TimeAgoPipe = /** @class */ /*@__PURE__*/ (function () {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} ngZone\n     */\n    function TimeAgoPipe(changeDetectorRef, ngZone) {\n        this.changeDetectorRef = changeDetectorRef;\n        this.ngZone = ngZone;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    TimeAgoPipe.prototype.transform = function (value) {\n        var _this = this;\n        this.removeTimer();\n        var /** @type {?} */ d = new Date(value);\n        var /** @type {?} */ now = new Date();\n        var /** @type {?} */ seconds = Math.round(Math.abs((now.getTime() - d.getTime()) / 1000));\n        var /** @type {?} */ timeToUpdate = (Number.isNaN(seconds)) ? 1000 : this.getSecondsUntilUpdate(seconds) * 1000;\n        this.timer = this.ngZone.runOutsideAngular(function () {\n            if (typeof window !== 'undefined') {\n                return window.setTimeout(function () {\n                    _this.ngZone.run(function () { return _this.changeDetectorRef.markForCheck(); });\n                }, timeToUpdate);\n            }\n            return null;\n        });\n        var /** @type {?} */ minutes = Math.round(Math.abs(seconds / 60));\n        var /** @type {?} */ hours = Math.round(Math.abs(minutes / 60));\n        var /** @type {?} */ days = Math.round(Math.abs(hours / 24));\n        var /** @type {?} */ months = Math.round(Math.abs(days / 30.416));\n        var /** @type {?} */ years = Math.round(Math.abs(days / 365));\n        if (Number.isNaN(seconds)) {\n            return '';\n        }\n        else if (seconds <= 45) {\n            return 'a few seconds ago';\n        }\n        else if (seconds <= 90) {\n            return 'a minute ago';\n        }\n        else if (minutes <= 45) {\n            return minutes + ' minutes ago';\n        }\n        else if (minutes <= 90) {\n            return 'an hour ago';\n        }\n        else if (hours <= 22) {\n            return hours + ' hours ago';\n        }\n        else if (hours <= 36) {\n            return 'a day ago';\n        }\n        else if (days <= 25) {\n            return days + ' days ago';\n        }\n        else if (days <= 45) {\n            return 'a month ago';\n        }\n        else if (days <= 345) {\n            return months + ' months ago';\n        }\n        else if (days <= 545) {\n            return 'a year ago';\n        }\n        else {\n            // (days > 545)\n            return years + ' years ago';\n        }\n    };\n    /**\n     * @return {?}\n     */\n    TimeAgoPipe.prototype.ngOnDestroy = function () {\n        this.removeTimer();\n    };\n    /**\n     * @return {?}\n     */\n    TimeAgoPipe.prototype.removeTimer = function () {\n        if (this.timer) {\n            window.clearTimeout(this.timer);\n            this.timer = null;\n        }\n    };\n    /**\n     * @param {?} seconds\n     * @return {?}\n     */\n    TimeAgoPipe.prototype.getSecondsUntilUpdate = function (seconds) {\n        var /** @type {?} */ min = 60;\n        var /** @type {?} */ hr = min * 60;\n        var /** @type {?} */ day = hr * 24;\n        if (seconds < min) {\n            // less than 1 min, update every 2 secs\n            return 2;\n        }\n        else if (seconds < hr) {\n            // less than an hour, update every 30 secs\n            return 30;\n        }\n        else if (seconds < day) {\n            // less then a day, update every 5 mins\n            return 300;\n        }\n        else {\n            // update every hour\n            return 3600;\n        }\n    };\n    return TimeAgoPipe;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\nexport { TimeAgoPipe };\n//# sourceMappingURL=time-ago-pipe.js.map\n",null]}